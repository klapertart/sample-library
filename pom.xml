<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>2.7.18</version>
		<relativePath/> <!-- lookup parent from repository -->
	</parent>

	<groupId>com.klapertart</groupId>
	<artifactId>sample-library</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<name>sample-library</name>
	<description>Demo project for Spring Boot Library</description>

	<properties>
		<java.version>11</java.version>
	</properties>

	<dependencies>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter</artifactId>
		</dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
		</dependency>
	</dependencies>

	<build>
		<plugins>

			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
			</plugin>

			<plugin>
				<groupId>se.bjurr.gitchangelog</groupId>
				<artifactId>git-changelog-maven-plugin</artifactId>
				<version>1.101.0</version>
				<executions>
					<execution>
						<id>GenerateGitChangelog</id>
						<phase>generate-sources</phase>
						<goals>
							<goal>git-changelog</goal>
						</goals>
						<configuration>
							<templateContent>
								<![CDATA[
# Changelog

{{#tags}}
{{#ifReleaseTag .}}
## [{{name}}](https://github.com/klapertart/sample-library/releases/tag/{{name}}) ({{tagDate .}})

{{#ifContainsBreaking commits}}
### Breaking changes

{{#commits}}
  {{#ifCommitBreaking .}}
- {{#eachCommitScope .}} **{{.}}** {{/eachCommitScope}} {{{commitDescription .}}} ([{{hash}}](https://github.com/klapertart/sample-library/commit//{{hash}}))
  {{/ifCommitBreaking}}
{{/commits}}
{{/ifContainsBreaking}}


{{#ifContainsType commits type='feat'}}
### Features

{{#commits}}
  {{#ifCommitType . type='feat'}}
- {{#eachCommitScope .}} **{{.}}** {{/eachCommitScope}} {{{commitDescription .}}} ([{{hash}}](https://github.com/klapertart/sample-library/commit//{{hash}}))
  {{/ifCommitType}}
{{/commits}}
{{/ifContainsType}}


{{#ifContainsType commits type='fix'}}
### Bug Fixes

{{#commits}}
  {{#ifCommitType . type='fix'}}
- {{#eachCommitScope .}} **{{.}}** {{/eachCommitScope}} {{{commitDescription .}}} ([{{hash}}](https://github.com/klapertart/sample-library/commit//{{hash}}))
  {{/ifCommitType}}
{{/commits}}
{{/ifContainsType}}

{{#ifContainsType commits type='chore'}}
### Chores

{{#commits}}
  {{#ifCommitType . type='chore'}}
- {{#eachCommitScope .}} **{{.}}** {{/eachCommitScope}} {{{commitDescription .}}} ([{{hash}}](https://github.com/klapertart/sample-library/commit//{{hash}}))
  {{/ifCommitType}}
{{/commits}}
{{/ifContainsType}}

{{#ifContainsType commits type='docs'}}
### Docs

{{#commits}}
  {{#ifCommitType . type='docs'}}
- {{#eachCommitScope .}} **{{.}}** {{/eachCommitScope}} {{{commitDescription .}}} ([{{hash}}](https://github.com/klapertart/sample-library/commit//{{hash}}))
  {{/ifCommitType}}
{{/commits}}
{{/ifContainsType}}

{{#ifContainsType commits type='refactor'}}
### Refactors

{{#commits}}
  {{#ifCommitType . type='refactor'}}
- {{#eachCommitScope .}} **{{.}}** {{/eachCommitScope}} {{{commitDescription .}}} ([{{hash}}](https://github.com/klapertart/sample-library/commit//{{hash}}))
  {{/ifCommitType}}
{{/commits}}
{{/ifContainsType}}

{{/ifReleaseTag}}
{{/tags}}

								]]>
							</templateContent>
						</configuration>
					</execution>
				</executions>
			</plugin>


			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-release-plugin</artifactId>
				<version>2.5.3</version>
				<configuration>
					<tagNameFormat>@{project.version}</tagNameFormat>
					<checkModificationExcludes>
						<checkModificationExclude>pom.xml</checkModificationExclude>
					</checkModificationExcludes>
					<arguments>-Dmaven.test.skipTests=true -Dmaven.test.skip=true -Dmaven.javadoc.skip=true -Dmaven.deploy.skip=true</arguments>
					<updateWorkingCopyVersions>false</updateWorkingCopyVersions>
				</configuration>
			</plugin>

		</plugins>
	</build>

	<scm>
		<url>https://github.com/klapertart/sample-library.git</url> <!-- URL HTTP de clone do projeto -->
		<connection>scm:git:https://github.com/klapertart/sample-library.git</connection> <!-- URL HTTP de clone do projeto -->
		<developerConnection>scm:git:https://github.com/klapertart/sample-library.git</developerConnection> <!-- URL HTTP de clone do projeto -->
		<tag>@{project.version}</tag>
	</scm>


</project>
